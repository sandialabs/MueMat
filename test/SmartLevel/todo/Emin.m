%
% Example for developing an interface for the smart level.
%
% Example 7 from document "Level Interface: Getting at Level Data in MueMat/MueLu".
% Energy minimization using 1 step of smoothed aggregation as initial guess.
%

clear all;
srand;
clear all;
mue_include

% Build problem matrix
n=50;
[A,nullspace,coords]=BuildElasticity2D(n,1e9,.25);
Amat = Operator(A.GetMatrixData(),2,2);


RowMap = Amat.GetRowMap();
ndofs = RowMap.NDOFs();

% Set options
numDesiredLevels = 2;         % number of AMG levels
options.NCoarseDofPerNode=2;

AmalgamateDropFact = CoalesceDropFactory();
AggFact            = AggregationFactory();
CNSFact            = CoarseNSFactory();
%
% somehow generate P0 for AP_PatternFactory here
%
P0pat = MyP0Generator();
PatFact            = AP_PatternFactory(P0pat);
PatFact.SetPatternType('AP');
%%%%%%%%%%%%%% NEW %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% set SA as the initial guess to emin
P0Fact             = SaPFactory();
Pfact              = EminPFactory(PatFact,CNSFact,@CGemin, AmalgamateDropFact,AggFact,P0Fact,options,[]);
%                                                                                     ^^^^^^
%                                                                                   new argument
%%%%%%%%%%%%%% end of NEW %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Pfact.SetSolverIterations(10);
Rfact              = TransPFactory();
PRfact             = GenericPRFactory(Pfact,Rfact);
Acfact             = RAPFactory();
GSFactory          = SmootherFactory(Smoother('GaussSeidel', 2, 1));


%
%  Construct and populate finest level with user information
%
Finest = Level();
Finest.Set('A', Amat);
Finest.Set('NullSpace', nullspace);


MgHierarchy = Hierarchy();
MgHierarchy.SetOutputLevel(1);
MgHierarchy.SetLevel(Finest,1);

%%%%%%%%%%%%%% NEW %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% suppose we want to keep the coarse nullspace generated by SA for Emin
firstCoarse = Level();
firstCoarse.request('Nullspace');
MgHierarchy.SetLevel(firstCoarse,2);
%%%%%%%%%%%%%% end of NEW %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

MgHierarchy.FillHierarchy(PRfact, Acfact, 1, numDesiredLevels);
MgHierarchy.SetSmoothers(GSFactory);

rhs = rand(RowMap.NDOFs(),1);

% Maximum number of iterations
maxit=9;

% Tolerance parameter (used only in preconditioned conjugate gradients method)
% tol = [];  % default = 1e-6
tol = eps*2; % near machine precision

% AMG as a preconditioner to CG
fprintf('CG preconditioned by AMG\n');
sol   = zeros(RowMap.NDOFs(),1);
zeroGuess = zeros(RowMap.NDOFs(),1);
[sol,flag,relres,iter,resvec] = pcg(Amat.GetMatrixData(),rhs,tol,maxit,...
             @(rhs)MgHierarchy.Iterate(rhs,1, zeroGuess,ALLZEROS,VCYCLE));
for ii=2:length(resvec),
  fprintf('%3d: ||r||=%e\n',ii-1,resvec(ii));
end
norm(rhs-Amat.GetMatrixData()*sol)/norm(rhs)
